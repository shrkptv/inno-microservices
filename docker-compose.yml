version: '3.9'

services:
  auth-db:
    image: postgres:latest
    container_name: auth-service-database
    environment:
      POSTGRES_DB: ${AUTH_DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - ${AUTH_DB_PORT}:5432
    volumes:
      - auth-service-database-data:/var/lib/postgresql/data

  user-db:
    image: postgres:15
    container_name: user-service-database
    environment:
      POSTGRES_DB: ${USER_DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - ${USER_DB_PORT}:5432
    volumes:
      - user-service-database-data:/var/lib/postgresql/data

  order-db:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${ORDER_DB_NAME}
      POSTGRES_USER: ${ORDER_DB_USERNAME}
      POSTGRES_PASSWORD: ${ORDER_DB_PASSWORD}
    ports:
      - ${ORDER_DB_PORT}:5432
    volumes:
      - order-service-database-data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: redis
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - redis-data:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}

  auth-service:
    build:
      context: ./auth-service/auth-service
    container_name: authentication-service
    ports:
      - ${AUTH_SERVICE_PORT}:8000
    environment:
      SPRING_DATASOURCE_URL: ${AUTH_DB_URL}
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      - auth-db

  user-service:
    build:
      context: ./user-service
    container_name: user-service-rest
    ports:
      - ${USER_SERVICE_PORT}:8081
    environment:
      SPRING_DATASOURCE_URL: ${USER_DB_URL}
      SPRING_DATA_REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      AUTH_SERVICE_URL: http://auth-service:${AUTH_SERVICE_PORT}
    depends_on:
      - user-db
      - auth-service
      - redis

  order-service:
    build:
      context: ./order-service
    container_name: order-service
    ports:
      - ${ORDER_SERVICE_PORT}:8082
    environment:
      SPRING_DATASOURCE_URL: ${ORDER_DB_URL}
      AUTH_SERVICE_URL: http://auth-service:${AUTH_SERVICE_PORT}
      USER_SERVICE_URL: http://user-service:${USER_SERVICE_PORT}
    depends_on:
      - order-db
      - auth-service
      - user-service

  api-gateway:
    build:
      context: ./api-gateway
    container_name: api-gateway
    ports:
      - ${API_GATEWAY_PORT}:8080
    environment:
      AUTH_SERVICE_URL: http://auth-service:${AUTH_SERVICE_PORT}
      USER_SERVICE_URL: http://user-service:${USER_SERVICE_PORT}
      ORDER_SERVICE_URL: http://order-service:${ORDER_SERVICE_PORT}
    depends_on:
      - auth-service
      - user-service
      - order-service

volumes:
  auth-service-database-data:
  user-service-database-data:
  order-service-database-data:
  redis-data:
